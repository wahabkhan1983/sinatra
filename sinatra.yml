---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Variables for creating EC2 Instances 
    vars:
      instance_type: t2.micro # Define the instance type and size
      security_group: sinatra-webserver # Define a new security group here
      image: ami-02fd0b06f06d93dfc # Amazon Linux AMI 2018.03.0 (HVM), SSD Volume Type - ami-02fd0b06f06d93dfc 
      keypair: sinatra # My AWS key Name 
      region: ap-southeast-2 # Region Name - Please change according to the requirement
      count: 1

    # Creating Tasks
    tasks:
    # Creating a Security group 
      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0

            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: "REFRESH THE ANSIBLE INVENTORY."  
        meta: refresh_inventory

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile
                      dest="./hosts"
                      regexp={{ item.public_ip }}
                      insertafter="[webserver]" line={{ item.public_ip }}
        with_items: '{{ec2.instances}}'    

      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: '{{ec2.instances}}'

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: '{{ec2.instances}}'
        args:
          tags:
            Name: webserver
    
      - name: "REFRESH THE ANSIBLE INVENTORY."
        meta: refresh_inventory

  - name: Configure instance(s)
    hosts: webserver
    become: True
    gather_facts: True
 
    tasks:
      
      - name: "REFRESH THE ANSIBLE INVENTORY."
        meta: refresh_inventory

      - name: Install git
        become: yes
        become_method: sudo
        yum: name=git state=present

      - name: Gem
        command: gem install "rubygems-update:<3.0.0" --no-document

      - name: Bundler
        command: gem install bundler -v '1.17.3'

      - git:
           repo: https://github.com/rea-cruitment/simple-sinatra-app.git
           dest: /home/ec2-user/sinatra/
    
      - name: Fix permissions
        become: yes
        become_method: sudo
        file: dest=/home/ec2-user/sinatra owner=ec2-user group=ec2-user recurse=yes

      - name: Compile and run
        command: /usr/local/bin/bundle install
        args:
            chdir: /home/ec2-user/sinatra

      - name: Compile and run
        command: /usr/local/bin/rackup -p 80 -o 0.0.0.0 -D
        args:
            chdir: /home/ec2-user/sinatra
        become: yes
